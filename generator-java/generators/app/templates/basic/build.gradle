group = '{{groupId}}'
version = '{{version}}'

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'net.wasdev.wlp.gradle.plugins:liberty-gradle-plugin:1.0'
        classpath files('gradle/wlp-anttasks.jar')
    }
}

apply plugin: 'war'
apply plugin: 'liberty'

sourceCompatibility = 1.8
targetCompatibility = 1.8

compileJava.options.encoding = 'UTF-8'

ext {
    // Liberty server properties
    {{#each properties}}
    {{this.name}} = {{{this.value}}}
    {{/each}}
    appName = '{{appName}}'
    // This is set in the ibm-web-ext.xml file

}

repositories {
    mavenCentral()
}

dependencies {
    {{#each deps}}
    {{this.scope}}Compile '{{this.groupId}}:{{this.artifactId}}:{{this.version}}'
    {{/each}}
    {{#has createType 'bff'}}
    providedCompile 'io.swagger:swagger-annotations:1.5.3'
    {{/has}}
    {{#bluemix}}
    {{#cloudant}}
    compile 'com.cloudant:cloudant-client:2.7.0'
    {{/cloudant}}
    {{#objectStorage}}
    compile 'org.pacesys:openstack4j-core:3.0.3'
    compile 'org.pacesys.openstack4j.connectors:openstack4j-httpclient:3.0.3'
    {{/objectStorage}}
    {{/bluemix}}
}

test {
    reports.html.destination = file("$buildDir/reports/unit")
    reports.junitXml.destination = file("$buildDir/test-results/unit")
    exclude '**/it/**'
}

task integrationTest(type: Test) {
    group 'Verification'
    description 'Runs the integration tests.'
    reports.html.destination = file("$buildDir/reports/it")
    reports.junitXml.destination = file("$buildDir/test-results/it")
    include '**/it/**'
    exclude '**/unit/**'

    systemProperties = ['liberty.test.port': testServerHttpPort, 'war.context': warContext]
}

task printMessageAboutRunningServer {
    doLast {
        println "The server is now running at http://localhost:${testServerHttpPort}/${warContext}"
        println "To stop the server run 'gradle libertyStop'"
    }
}

task publishServerConfig(type: Copy) {
    from 'src/main/liberty/config/'
    into serverDirectory
}

task publishWar(type: Copy) {
    from(war)
    into("${serverDirectory}/dropins")
}

task createServerBootstrap() {
    outputs.file("${serverDirectory}/bootstrap.properties")
    doLast {
        def bootstrapProperties = file("${serverDirectory}/bootstrap.properties")
        if (!bootstrapProperties.exists()) {
            bootstrapProperties << "default.http.port=${testServerHttpPort}\ndefault.https.port=${testServerHttpsPort}"
        }
    }
}

liberty {
    install {
        runtimeUrl = "http://repo1.maven.org/maven2/com/ibm/websphere/appserver/runtime/wlp-webProfile7/17.0.0.1/wlp-webProfile7-17.0.0.1.zip"
    }
    packageLiberty {
        archive = packageFile
        include = packagingType
    }
}

task libertyStartTestServer(type: net.wasdev.wlp.gradle.plugins.tasks.StartTask){
    description 'Starts the WebSphere Liberty Profile server for testing.'
    logging.level = LogLevel.INFO
}

tasks.create('setupServer')
check.dependsOn 'integrationTest'
setupServer.dependsOn 'installLiberty', 'createServerBootstrap', 'publishServerConfig', 'publishWar'
publishServerConfig.mustRunAfter 'installLiberty'
createServerBootstrap.mustRunAfter 'publishServerConfig'
publishWar.mustRunAfter 'installLiberty'
publishWar.dependsOn 'war'
libertyStart.dependsOn 'setupServer'
integrationTest.dependsOn 'libertyStartTestServer', 'testClasses'
integrationTest.finalizedBy 'libertyStop'
libertyStartTestServer.dependsOn 'setupServer'
assemble.dependsOn 'libertyPackage'
libertyPackage.dependsOn 'setupServer'
libertyStart.finalizedBy 'printMessageAboutRunningServer'
